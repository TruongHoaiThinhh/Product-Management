<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="muahangMenu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABYAAAAYCAYAAAD+vg1LAAAABGdBTUEAALGPC/xhBQAAAmJJREFUSEvt
        lMtvElEUh+cPcKVb09RYNda9caNxYfwbanTjxsTEtDSatDZCjS5a7aYm1jRxYROLtJVXo1LExFdqTQGB
        OlSsgkCZAgMWTFEIFPl5752p4dYBNdFdv+Tk3MeZL3deR8B/Ykv8E07scDphsdthtlpxnwsLyxabDY9m
        ZtTq5nBieuHvkGUZ8263OmsMJ6YnpXyKxkjEEY3FWaZzyl2jkeV0Oo15j4eNG8GJ6e1SlhMJJCQJ0orE
        Mp1Txk0mZLJZNs5kM/CJC1gceA7x+lO2Vs8msYVlKZlCMpUmISNFIplMs3W31wujaQL3JibZvMegR3Q6
        jrlbHvj0yqE24MUWRSxnsvi8uopcLo98voAvua8oFstsb4PzFy9jOSnjytAgHH0uuM+OqjsKmmIqC7wJ
        IhgIIbQQQcs5AYW1CvKFMnIlYFa3E7klM/oHb8D57AU6L/XAS+6mHk1x8VsFu7oERN6lsKdbQG0dKFWA
        oZtjmL2wF5g7Cky1ImS/iu5ewy9SSkNx0P8Bu3UCFgMRlIm0SNaZ9PUxUngAuL0dd87s15RSNMWlUhnf
        q2yIGgn6dF92tRDzEWCyHRjdgZHT7Zh+8orVaKEprq7X4PeKEAPv8VaMYW3qMPlUrgGiARjZhuFTbazO
        +sDBshaaYkprJ3nGoRT29QoY6z+Bh+N6VP0DGO4gJ1cxN/lTebH6g1BE3xLayIv7GFqB7uRx9HUcgs9w
        UN1VqK/fDCemDehvaFbPiR+7XKwR0Z5httrI2M7mSiZdj4yVbqd0OlrfCE4cDofZ5/OnQesbwYn/JVti
        FeAHjHisV+BrX+cAAAAASUVORK5CYII=
</value>
  </data>
  <data name="nccMenu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABUAAAAYCAYAAAAVibZIAAAABGdBTUEAALGPC/xhBQAAAedJREFUSEvt
        lM1O21AUhHmgIvoGiIADYlFWFT8pQl0hAQ206gvQ8g4IkBqTbVbZUrasauiiK4illKK0trFjJ8S/+Rnu
        OYEWR0GxECwqMdLkSL6ez+Mr5w7hCfQMfXwxtFAoIJ/PQ5Zl7Avnb6Ys55DL9TfdSxnK9oqhtPhQ9csy
        lJ5K0irnOPpRxotNBQfHZZhaBZqmQzcuoenGX//+o+H81wVnbrN3xVB6HZJtVCDtlDCTU5HeU+HXLjEh
        TWI+s4jVd+tYf/8Rb5beYnJqWsB1ztxm7yoGdUwNX7+X8XLrhGfDsWDbDmynFrNVtbkxaTC0aqDjWkBY
        BTwLdccUAOufre40LRO6kRDq1W0ciIYjnxRuGrp1uK4H1/Njvmq4qIo3IA2EtrwaJnbOeE+l3RLQ9pEa
        lzA7n8HKWhbZjQ9YWFyClJ5Cw3U5MxDa9BvccOTzMU9EPqKoiajZijkII25LGtw09MRvKBzxbAtoEPjw
        gyBmz6dtoHsTQNEJueHw5rduU7S61/soiujBSaBoI7V9ildfSry3pNGxFF7PLmB5ZQ2r2Q3MiW82NZ7m
        NVICKETDn6KpgkMxk+he6JP894vFIi/SqbQv3D2lxEkkWlCT+0wZyvaKoaqqQlGUB5myvWLoY+t/gQLX
        JHlHQqcEV34AAAAASUVORK5CYII=
</value>
  </data>
</root>